package com.servo.session;


import com.servo.util.SRVUtil;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URLConnection;
import java.net.URLEncoder;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 *
 * @author Administrator
 */
@WebServlet(name = "SRVCall", urlPatterns = {"/SRVCall"})
public class SRVCall extends HttpServlet {

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("application/xml");
        PrintWriter out = response.getWriter();

        System.out.println("INSIDE ------------ SRVCall ------------");
        SRVUtil.printOut("INSIDE ------------ SRVCall ------------");
        
        String sOutputXML = null;
        URLConnection urlConnection = null;
        
        String strAPI = encodeURIComponent(request.getParameter("strAPI"));
        String sInputXML = encodeURIComponent(request.getParameter("InputXml"));
         sInputXML= sInputXML.replaceAll("#username#","supervisor").replaceAll("#password#","supervisor351");
        System.out.println("my  input=="+sInputXML);
        String strURL = SRVUtil.getSRVApplicationConfig().getServerConfig().getHttpProtocol() + "://" +
                        SRVUtil.getSRVApplicationConfig().getServerConfig().getHttpServerIp() + ":" +
                        SRVUtil.getSRVApplicationConfig().getServerConfig().getHttpServerPort()+"/omnidocs/servlet/GenericCallBroker?";
        
        System.out.println("[SRVCall]     processRequest()    Login Input XML : ----------- > \n"+strURL+"InputXML="+sInputXML+"&JTSIp=" + SRVUtil.getSRVApplicationConfig().getServerConfig().getAppServerIp() + 
                                "&JTSPort=" + SRVUtil.getSRVApplicationConfig().getServerConfig().getAppServerPort());
        
        SRVUtil.printOut("[SRVCall]     processRequest()    Login Input XML : ----------- > \n"+strURL+"InputXML="+sInputXML+"&JTSIp=" + SRVUtil.getSRVApplicationConfig().getServerConfig().getAppServerIp() + 
                                "&JTSPort=" + SRVUtil.getSRVApplicationConfig().getServerConfig().getAppServerPort());
        
        //String pUrl = strURL + "InputXML=" + encodeURIComponent(sInputXML) + "&JTSIp=" + SRVUtil.getSRVApplicationConfig().getServerConfig().getAppServerIp() + 
        String pUrl = strURL + "InputXML=" + sInputXML + "&JTSIp=" + SRVUtil.getSRVApplicationConfig().getServerConfig().getAppServerIp() + 
                                "&JTSPort=" + SRVUtil.getSRVApplicationConfig().getServerConfig().getAppServerPort();
       
        
        System.out.println("[SRVCall] processRequest()     GenericCallBroker URL ------------- > "+pUrl);
        SRVUtil.printOut("[SRVCall] processRequest()     GenericCallBroker URL ------------- > "+pUrl);

        SRVCallBroker b = new SRVCallBroker();
        System.out.println("[SRVCall] processRequest()     SRVCallBroker URL ------------- > "+pUrl);
        SRVUtil.printOut("[SRVCall] processRequest()     SRVCallBroker URL ------------- > "+pUrl);
        
        
        out.println(b.callBroker(strAPI, pUrl));
      
        out.close();
    }

    public static String encodeURIComponent(String component) {
        String result1 = null;
        try 
        {
            result1 = URLEncoder.encode(component, "UTF-8").replaceAll("\\%28", "(").replaceAll("\\%29", ")").replaceAll("\\+", "%20").replaceAll("\\%27", "'").replaceAll("\\%21", "!").replaceAll("\\%7E", "~");
        } 
        catch (UnsupportedEncodingException e) 
        {
            result1 = component;
            
            SRVUtil.printOut("ERROR ---------------------- >  SRVCall : encodeURIComponent \n");
            SRVUtil.printErr("ERROR ---------------------- >  SRVCall : encodeURIComponent \n"+SRVUtil.getExcpStackTrace(e));
        }

        return result1;
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP
     * <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP
     * <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>
}
